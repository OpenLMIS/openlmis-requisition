spring.flyway.schemas=requisition
spring.flyway.sql-migration-prefix=
spring.flyway.placeholder-prefix=#[
spring.flyway.placeholder-suffix=]
spring.flyway.table=schema_version

spring.datasource.url=${DATABASE_URL}?stringtype=unspecified
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jackson.deserialization.ACCEPT_FLOAT_AS_INT=false
spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.hibernate.naming.physical-strategy=org.openlmis.requisition.domain.naming.CustomPhysicalNamingStrategy
spring.jpa.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.default_schema=requisition
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true

server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.compression.min-response-size=1024

defaultLocale=${LOCALE:en}
time.zoneId=${TIME_ZONE_ID:UTC}

currencyCode=${CURRENCY_CODE:USD}
currencySymbol=${CURRENCY_SYMBOL:$}
currencySymbolSide=${CURRENCY_SYMBOL_SIDE:left}
currencyDecimalPlaces=${CURRENCY_DECIMAL_PLACES:2}
currencyLocale=${CURRENCY_LOCALE:US}

groupingSeparator=${GROUPING_SEPARATOR:,}
groupingSize=${GROUPING_SIZE:3}
decimalSeparator=${DECIMAL_SEPARATOR:.}

dateFormat=${DATE_FORMAT:dd/MM/yyyy}
dateTimeFormat=${DATE_TIME_FORMAT:dd/MM/yyyy HH:mm:ss}

service.url=${BASE_URL}

spring.redis.host=${REDIS_URL:redis}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}

auth.server.authorizationUrl=${BASE_URL}/api/oauth/token
auth.server.url=${BASE_URL}/api/oauth/check_token
auth.server.clientId=trusted-client
auth.server.clientSecret=secret
auth.resourceId=requisition
auth.server.invalidToken.retryLimit=3

referencedata.url=${BASE_URL}
fulfillment.url=${BASE_URL}
notification.url=${BASE_URL}
stockmanagement.url=${BASE_URL}

requisitionUri=${REQUISITION_URI:/#!/requisition/{0}/fullSupply}

cors.allowedOrigins=${CORS_ALLOWED_ORIGINS:}
cors.allowedMethods=${CORS_ALLOWED_METHODS:}

reasons.consumed=${CONSUMED_REASON_ID:b5c27da7-bdda-4790-925a-9484c5dfb594}
reasons.receipts=${RECEIPTS_REASON_ID:313f2f5f-0c22-4626-8c49-3554ef763de3}
reasons.beginningBalanceExcess=${BEGINNING_BALANCE_EXCESS_REASON_ID:84eb13c3-3e54-4687-8a5f-a9f20dcd0dac}
reasons.beginningBalanceInsufficiency=${BEGINNING_BALANCE_INSUFFICIENCY_REASON_ID:f8bb41e2-ab43-4781-ae7a-7bf3b5116b82}

db.clustering.enabled=${DB_CLUSTERING_ENABLED:false}
db.clustering.cron.expression=${DB_CLUSTERING_CRON_EXP:0 0 0 * * ?}

publicUrl=${PUBLIC_URL:${BASE_URL}}

spring.data.rest.maxPageSize=2147483647

#why 2000 ? Check https://stackoverflow.com/a/417184
request.maxUrlLength=2000

unskip.requisition.item.when.approving=${UNSKIP_REQUISITION_ITEM_WHEN_APPROVING:false}

# The UUID of Unit of Orderables to use for StockEvents created by Requisition module, Singe Dose if not set
defaultUnitOfOrderables=${DEFAULT_UNIT_OF_ORDERABLES_ID:c86e7d33-f8f8-4e0d-b540-89b16ffd71f2}
